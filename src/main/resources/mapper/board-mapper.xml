<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Diary">

	<!-- 글 리스트 -->
 	<select id="listDiary" resultType="DiaryVO">
 	<![CDATA[
		select diaryall.*, liketb.like_cnt from 
	    (
	    select udt.*, dit.diary_img_num, dit.diary_img_src from 
	        (select dt.*, ut.user_id, ut.user_name from diary_tb dt left outer join user_tb ut on dt.diary_write = ut.user_no) udt 
	    left outer join 
	        diary_img_tb dit 
	    on dit.diary_no = udt.diary_no 
	    ) diaryall
		left join 
		    (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb
		on diaryall.diary_no = liketb.diary_no
		order by diaryall.diary_date desc
	]]>
	</select>
	
	<!-- 좋아요 리스트 -->
	<select id="likeList" parameterType="LikeVO" resultType="int">
		select diary_no from like_tb where user_no = #{user_no}
	</select>

	<!-- 좋아요 클릭 -->
	<insert id="insertLike" parameterType="LikeVO" flushCache="true" statementType="PREPARED">
		insert into like_tb values(#{diary_no}, #{user_no})
	</insert>
	
	<!-- 좋아요 해제 -->
	<delete id="deleteLike" parameterType="LikeVO" flushCache="true" statementType="PREPARED">
		delete from like_tb where diary_no = #{diary_no} and user_no = #{user_no}
	</delete>
	
	<!-- 좋아요 갯수 -->
  	<select id="likeCnt" parameterType="LikeVO" resultType="int">
		select count(*) as like_cnt from like_tb where diary_no = #{diary_no} 
	</select>


	
	<!-- 글 등록 -->
 	<insert id="writeDiary" parameterType="DiaryVO" flushCache="true" statementType="PREPARED">
 		insert into diary_tb values(#{diary_no}, #{diary_write}, #{diary_content} , sysdate, default)
 	</insert>
 	
 	<!-- 글 수정 -->
 	<update id="modifyDiary" parameterType="DiaryVO" flushCache="true" statementType="PREPARED">
 		update diary_tb set diary_content = #{diary_content} where diary_no = #{diary_no} and diary_write = #{user_no}
 	</update>
 	
 	<!-- 시퀀스 번호 알아오기 -->
 	<select id="getSequence" resultType="int">
 		   select Diary_SEQ.nextVal from dual
 	</select>
 	
 	
 	<!-- 이미지 등록 -->
 	<insert id="writeImg" parameterType="DiaryVO" flushCache="true" statementType="PREPARED">
 		insert into Diary_Img_TB values(#{diary_no}, img_SEQ.nextVal, #{diary_img_src})
 	</insert>
 	
 	<!-- 글 삭제 -->
 	<delete id="deleteDiary" parameterType="DiaryVO" flushCache="true" statementType="PREPARED">
 		delete from diary_tb where diary_no = #{diary_no}
 	</delete>
 
 	
 	
 	<!-- 글 세부 내용 -->
 	<select id="detailDiary" parameterType="int" resultType="DiaryVO">
 	 	<![CDATA[
		select diaryall.*, liketb.like_cnt from 
	    (
	    select udt.*, dit.diary_img_num, dit.diary_img_src from 
	        (select dt.*, ut.user_id, ut.user_name from diary_tb dt left outer join user_tb ut on dt.diary_write = ut.user_no) udt 
	    left outer join 
	        diary_img_tb dit 
	    on dit.diary_no = udt.diary_no 
	    ) diaryall
		left join 
		    (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb
		on diaryall.diary_no = liketb.diary_no where diaryall.diary_no = #{diary_no}
		order by diaryall.diary_date desc
	]]>
 	</select>
 	 
 	 
 	<!-- 댓글 조회 -->
	<select id="selectComment" parameterType="int" resultType="CommentVO">
		select * from (select * from comment_tb ct, user_tb ut where ct.writer=ut.user_no) where diary_no=#{diary_no} order by comm_date desc
	</select> 

	
	<!-- 최근 댓글 조회 -->
<!-- 	<select id="currentComment" resultType="CommnetVO">
		select top 1 * from (select * from comment_tb ct, user_tb ut where ct.writer=ut.user_no) order by comm_date desc
	</select>  -->


 	<!-- 댓글 등록  -->
 	<insert id="insertComment" parameterType="CommentVO">
 		insert into comment_tb values(COMMENT_SEQ.nextVal, #{diary_no}, #{writer}, #{comm_comment}, sysdate, COMMENT_SEQ.nextVal, default, default)
 	</insert>
 	
 	
 	
 	

</mapper>
