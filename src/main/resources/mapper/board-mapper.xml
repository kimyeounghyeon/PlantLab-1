<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Diary">
<resultMap type="DiaryVO" id="diaryMainVO">
	<id column = "diary_no" property="diary_no"/>
	<result column="diary_write" property="diary_write"/>
	<result column="diary_content" property="diary_content"/>
	<result column="diary_date" property="diary_date"/>
	<result column="diary_views" property="diary_views"/>
	<result column="user_id" property="user_id"/>
	<result column="like_cnt" property="like_cnt"/>
	<collection property="diaryImgVO" column="diary_no" ofType="DiaryImgVO" columnPrefix="s_">
	<id column="diary_no" property="diary_no"/>
	<result column="diary_img_num" property="diary_img_num"/>
	<result column="diary_img_src" property="diary_img_src"/>
	</collection>
</resultMap>

<resultMap type="DiaryVO" id="diaryDetailVO" >
	<id column = "diary_no" property="diary_no"/>
	<result column="diary_write" property="diary_write"/>
	<result column="diary_content" property="diary_content"/>
	<result column="diary_date" property="diary_date"/>
	<result column="diary_views" property="diary_views"/>
	<result column="user_id" property="user_id"/>
	<result column="like_cnt" property="like_cnt"/>
	<collection property="diaryImgVO" column="diary_no" ofType="DiaryImgVO" columnPrefix="s_">
	<id column="diary_no" property="diary_no"/>
	<result column="diary_img_num" property="diary_img_num"/>
	<result column="diary_img_src" property="diary_img_src"/>
	</collection>
</resultMap>

	<!-- 글 리스트 -->
 	<select id="listDiary" resultMap="diaryMainVO">
 	<![CDATA[
      select f.diary_no, f.user_id, f.diary_content, s.diary_img_num as s_diary_img_num, s.diary_img_src as s_diary_img_src, f.diary_date, f.like_cnt from 
    (
    select a.*, (select count(*) as like_cnt from like_tb where diary_no=a.diary_no) as like_cnt, b.user_id, b.user_name
    from (select * from diary_tb) a 
    left outer join user_tb b 
    on a.diary_write = b.user_no
    ) f 
    LEFT OUTER JOIN diary_img_tb s
    on f.diary_no = s.diary_no order by f.diary_date desc
	]]>
	</select>
	
	<!-- 글 세부 내용 -->
 	<select id="detailDiary" parameterType="int" resultMap="diaryDetailVO">
 	 	<![CDATA[
        select f.diary_no, f.user_id, f.diary_content, s.diary_img_num as s_diary_img_num, s.diary_img_src as s_diary_img_src, f.diary_date, f.like_cnt from 
    (
    select a.*, (select count(*) as like_cnt from like_tb where diary_no=a.diary_no) as like_cnt, b.user_id, b.user_name
    from (select * from diary_tb where diary_no= #{diary_no}) a 
    left outer join user_tb b 
    on a.diary_write = b.user_no
    ) f 
    LEFT OUTER JOIN diary_img_tb s
    on f.diary_no = s.diary_no
	]]>
 	</select>
 	
	<!-- 관리자 / diary 아이디를 통한 게시글 검색 -->
 	<select id="searchId" parameterType="String" resultType="DiaryVO">
 	 	<![CDATA[
		select diaryall.*, liketb.like_cnt from 
	    (
	    select udt.*, dit.diary_img_num, dit.diary_img_src from 
	        (select dt.*, ut.user_id, ut.user_name from diary_tb dt left outer join user_tb ut on dt.diary_write = ut.user_no) udt 
	    left outer join 
	        diary_img_tb dit 
	    on dit.diary_no = udt.diary_no 
	    ) diaryall
		left join 
		    (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb
		on diaryall.diary_no = liketb.diary_no 
		where diaryall.user_id LIKE '%'||#{keyword}||'%'
		order by diaryall.diary_date desc
	]]>
 	</select>
 	
	<!-- 관리자 / diary 내용을 통한 게시글 검색 -->
 	<select id="searchContent" parameterType="String" resultType="DiaryVO">
 	 	<![CDATA[
		select diaryall.*, liketb.like_cnt from 
	    (
	    select udt.*, dit.diary_img_num, dit.diary_img_src from 
	        (select dt.*, ut.user_id, ut.user_name from diary_tb dt left outer join user_tb ut on dt.diary_write = ut.user_no) udt 
	    left outer join 
	        diary_img_tb dit 
	    on dit.diary_no = udt.diary_no 
	    ) diaryall
		left join 
		    (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb
		on diaryall.diary_no = liketb.diary_no where diaryall.diary_content LIKE '%'||#{keyword}||'%'
		order by diaryall.diary_date desc
	]]>
 	</select>
 	
 	<!-- 관리자 / diary 아이디를 통한 게시글 개수 -->
 	<select id="getSearchIdListCount" parameterType="String" resultType="int">
 	 	<![CDATA[
		select count(*) from 
	    (
	    select udt.*, dit.diary_img_num, dit.diary_img_src from 
	        (select dt.*, ut.user_id, ut.user_name from diary_tb dt left outer join user_tb ut on dt.diary_write = ut.user_no) udt 
	    left outer join 
	        diary_img_tb dit 
	    on dit.diary_no = udt.diary_no 
	    ) diaryall
		left join 
		    (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb
		on diaryall.diary_no = liketb.diary_no 
		where diaryall.user_id LIKE '%'||#{keyword}||'%'
	]]>
 	</select>
 	
 	<!-- 관리자 / diary 내용을 통한 게시글 개수 -->
 	<select id="getSearchContentListCount" parameterType="String" resultType="int">
 	 	<![CDATA[
		select count(*) from 
	    (
	    select udt.*, dit.diary_img_num, dit.diary_img_src from 
	        (select dt.*, ut.user_id, ut.user_name from diary_tb dt left outer join user_tb ut on dt.diary_write = ut.user_no) udt 
	    left outer join 
	        diary_img_tb dit 
	    on dit.diary_no = udt.diary_no 
	    ) diaryall
		left join 
		    (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb
		on diaryall.diary_no = liketb.diary_no 
		where diaryall.diary_content LIKE '%'||#{keyword}||'%'
	]]>
 	</select>
 	
 	<!-- 마이페이지 내용을 통한 게시글 개수 -->
 	<select id="getSearchContentMyListCount" parameterType="DiaryVO" resultType="int">
 	 	<![CDATA[
		select count(*) from 
	    (
	    select udt.*, dit.diary_img_num, dit.diary_img_src from 
	        (select dt.*, ut.user_id, ut.user_name from diary_tb dt left outer join user_tb ut on dt.diary_write = ut.user_no) udt 
	    left outer join 
	        diary_img_tb dit 
	    on dit.diary_no = udt.diary_no 
	    ) diaryall
		left join 
		    (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb
		on diaryall.diary_no = liketb.diary_no 
		where diaryall.diary_content LIKE '%'||#{diary_content}||'%' and diaryall.diary_write = #{diary_write}
	]]>
 	</select>
 	
 	<!-- 마이페이지 내용을 통한 게시글 검색 -->
 	<select id="searchMyContent" parameterType="DiaryVO" resultType="DiaryVO">
 	 	<![CDATA[
		select diaryall.*, liketb.like_cnt from 
	    (
	    select udt.*, dit.diary_img_num, dit.diary_img_src from 
	        (select dt.*, ut.user_id, ut.user_name from diary_tb dt left outer join user_tb ut on dt.diary_write = ut.user_no) udt 
	    left outer join 
	        diary_img_tb dit 
	    on dit.diary_no = udt.diary_no 
	    ) diaryall
		left join 
		    (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb
		on diaryall.diary_no = liketb.diary_no where diaryall.diary_content LIKE '%'||#{diary_content}||'%' and diaryall.diary_write = #{diary_write}
		order by diaryall.diary_date desc
	]]>
 	</select>
 	
 	<!-- 마이 페이지 게시글 갯수 구하기 -->
 	<select id="getlistCount" resultType="int">
 		select count(*) as diary_cnt from diary_tb where diary_write = #{diary_write}
 	</select>
 	
 	<!-- 관리자 페이지 게시글 갯수 구하기 -->
 	<select id="getListCountAll" resultType="int">
 		select count(*) as diary_cnt from diary_tb 
 	</select>
 	
 	<!-- 이미지 테이블 조회 -->
 	<!-- <select id="diaryImg" parameterType="int" resultType="DiaryImgVO">
 		select * from diary_img_tb where diary_no = #{diary_no}
 	</select> -->
	
	<!-- 좋아요 리스트 -->
	<select id="likeList" parameterType="LikeVO" resultType="int">
		select diary_no from like_tb where user_no = #{user_no}
	</select>

	<!-- 좋아요 클릭 -->
	<insert id="insertLike" parameterType="LikeVO" flushCache="true" statementType="PREPARED">
		insert into like_tb values(#{diary_no}, #{user_no})
	</insert>
	
	<!-- 좋아요 해제 -->
	<delete id="deleteLike" parameterType="LikeVO" flushCache="true" statementType="PREPARED">
		delete from like_tb where diary_no = #{diary_no} and user_no = #{user_no}
	</delete>
	
	<!-- 좋아요 갯수 -->
  	<select id="likeCnt" parameterType="LikeVO" resultType="int">
		select count(*) as like_cnt from like_tb where diary_no = #{diary_no} 
	</select>


	
	<!-- 글 등록 -->
 	<insert id="writeDiary" parameterType="DiaryVO" flushCache="true" statementType="PREPARED">
 		insert into diary_tb values(diary_seq.nextVal, #{diary_write}, #{diary_content} , sysdate, default)
 	</insert>
 	
 	<!-- 이미지 등록 -->
 	<insert id="writeImg" parameterType="DiaryImgVO" flushCache="true" statementType="PREPARED">
 		insert into Diary_Img_TB values(#{diary_no}, img_SEQ.nextVal, #{diary_img_src})
 	</insert>
 	
 	<!-- 글 수정 -->
 	<update id="modifyDiary" parameterType="DiaryVO" flushCache="true" statementType="PREPARED">
 		update diary_tb set diary_content = #{diary_content} where diary_no = #{diary_no}
 	</update>
 	
 	<!-- 이미지 수정 -->
 	<update id="modifyImg" parameterType="DiaryImgVO" flushCache="true" statementType="PREPARED">
 		update diary_img_tb set diary_img_src = #{diary_img_src} where diary_no = #{diary_no}
 	</update>
 	
 	<!-- 시퀀스 번호 알아오기 -->
 	<select id="getSequence" resultType="int">
 		   select Diary_SEQ.currVal from dual
 	</select>
 	
 	<!-- 글 삭제 -->
 	<delete id="deleteDiary" parameterType="DiaryVO" flushCache="true" statementType="PREPARED">
 		delete from diary_tb where diary_no = #{diary_no}
 	</delete>
 
 	<select id="detailWriter" parameterType="int" resultType="int">
 		select diary_write from diary_tb where diary_no = #{diary_no}
 	</select>
 	 
 	 
 	<!-- 댓글 조회 -->
	<select id="selectComment" parameterType="int" resultType="CommentVO">
		select * from (select * from comment_tb ct, user_tb ut where ct.writer=ut.user_no) where diary_no=#{diary_no} order by comm_date desc
	</select> 


 	<!-- 댓글 등록  -->
 	<insert id="insertComment" parameterType="CommentVO">
 		insert into comment_tb values(COMMENT_SEQ.nextVal, #{diary_no}, #{writer}, #{comm_comment}, sysdate, COMMENT_SEQ.nextVal, default, default)
 	</insert>
 	
 	
 	<!-- 댓글 수정 -->
 	<update id="updateComment" parameterType="CommentVO">
		update comment_tb set comm_comment = #{comm_comment}, comm_date = sysdate where comm_no = #{comm_no} 
 	</update>
 	
 	
 	<!-- 댓글 삭제 -->
 	<delete id="deleteComment" parameterType="CommentVO">
 		delete from comment_tb where diary_no = #{diary_no} and comm_no = #{comm_no}
 	</delete>
 	
 	
 	
 	<!-- 마이페이지 게시글 조회 -->
 	<select id="myDiary" parameterType="int" resultType="DiaryVO">
	select * from diary_tb dt left outer join (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb on dt.diary_no = liketb.diary_no where diary_write = #{diary_write} order by diary_date desc
 	</select>
 	
 	<!-- 마이페이지 내용 조회 -->
 	<select id="myContent" parameterType="DiaryVO" resultType="DiaryVO">
 		select * from diary_tb dt left outer join (select diary_no, count(*) as like_cnt from like_tb group by diary_no) liketb on dt.diary_no = liketb.diary_no where diary_write = #{diary_write} and diary_content LIKE '%'||#{diary_content}||'%' order by diary_date desc
 	</select>
 	
 	<!-- 관리자 페이지 게시글 조회 -->
 	<select id="admlistDiary" resultType="DiaryVO">
	select * from diary_tb dt left outer join user_tb ut on dt.diary_write = ut.user_no order by diary_date desc
 	</select>
 	
 	

</mapper>
